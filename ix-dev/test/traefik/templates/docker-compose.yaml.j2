{% set tpl = ix_lib.base.render.Render(values) %}

{# Create traefik container #}
{# Get name from TrueNAS UI #}
{# Get container image & tag from ix_values.yaml #}
{% set traefik = tpl.add_container(values.consts.traefik_container_name, "image") %}

{# Configure Healthcheck #}
{% if values.network.webui_enable %}
  {% do traefik.healthcheck.set_custom_test("traefik healthcheck --ping") %}
{% else %}
  {% do traefik.healthcheck.set_custom_test("traefik healthcheck") %}
{% endif %}

{# Add capabilities #}
{% do traefik.add_caps(["SETUID", "SETGID", "CHOWN", "FOWNER", "DAC_OVERRIDE"]) %}


{# Add Environment variables #}
{% do traefik.environment.add_env("TRAEFIK_PROVIDERS_DOCKER", values.consts.commands.docker.enabled) %}
{% do traefik.environment.add_env("TRAEFIK_PROVIDERS_DOCKER_EXPOSEDBYDEFAULT", values.consts.commands.docker.exposed) %}
{% do traefik.environment.add_env("TRAEFIK_PROVIDERS_DOCKER_NETWORK", values.consts.commands.docker.proxy_network) %}

{# Add conditional environment variables #}
{# WebUI #}
{# IF WebUI is enabled: #}
{% if values.network.webui_enable %}
  {% do traefik.environment.add_env("TRAEFIK_PING", "true") %}
  {% do traefik.environment.add_env("TRAEFIK_API", "true") %}
  {% do traefik.environment.add_env("TRAEFIK_API_DASHBOARD", "true") %}
  {% do traefik.environment.add_env("TRAEFIK_API_DISABLEDASHBOARDAD", "true") %}
  {% do traefik.environment.add_env("TRAEFIK_ENTRYPOINTS_TRAEFIK_ADDRESS", ":%d"|format(values.network.web_port.port_number)) %}
{% endif %}
{# Web UI HTTP or HTTPS #}
{% if values.network.webui_secure %}
  {% do traefik.environment.add_env("TRAEFIK_API_INSECURE", "false") %}
{% else %}
  {% do traefik.environment.add_env("TRAEFIK_API_INSECURE", "true") %}
{% endif %}

{# EntryPoints #}
{# Check if http proxying is enabled and add entrypoint when nessecary #}
{% if values.network.http_enable %}
  {% do traefik.environment.add_env("TRAEFIK_WEB_ADDRESS", ":%d"|format(values.network.http_port.port_number)) %}
{% endif %}
{# Check if https proxying is enabled and add entrypoint when nessecary  #}
{% if values.network.https_enable %}
  {% do traefik.environment.add_env("TRAEFIK_WEBSECURE_ADDRESS", ":%d"|format(values.network.https_port.port_number)) %}
{% endif %}
{# Check if https redirection is enabled and add enable https redirection if it is  #}
{% if values.network.https_redirect %}
  {% do traefik.environment.add_env("TRAEFIK_ENTRYPOINTS_WEB_HTTP_REDIRECTIONS_ENTRYPOINT_TO", "websecure") %}
  {% do traefik.environment.add_env("TRAEFIK_ENTRYPOINTS_WEB_HTTP_REDIRECTIONS_ENTRYPOINT_SCHEME", "https") %}
  {% do traefik.environment.add_env("TRAEFIK_ENTRYPOINTS_WEB_HTTP_REDIRECTIONS_ENTRYPOINT_PERMANENT", "true") %}
{% endif %}

{# Challenges #}
{# HTTP Challenge #}
{% if values.network.http_challenge %}
  {% do traefik.environment.add_env("TRAEFIK_CERTIFICATESRESOLVERS_TRUENASHTTPRESOLVER_ACME_HTTPCHALLENGE", "true") %}
  {% do traefik.environment.add_env("TRAEFIK_CERTIFICATESRESOLVERS_TRUENASHTTPRESOLVER_ACME_HTTPCHALLENGE_ENTRYPOINT", "web") %}
  {% do traefik.environment.add_env("TRAEFIK_CERTIFICATESRESOLVERS_TRUENASHTTPRESOLVER_ACME_EMAIL", values.network.http_challenge.email) %}
  {% do traefik.environment.add_env("TRAEFIK_CERTIFICATESRESOLVERS_TRUENASHTTPRESOLVER_ACME_STORAGE", "%s/http-acme.json"|format(values.consts.storage.acme)) %}

{% endif %}
{# TLS Challenge #}
{% if values.network.tls_challenge %}
  {% do traefik.environment.add_env("TRAEFIK_CERTIFICATESRESOLVERS_TRUENASTLSRESOLVER_ACME_TLSCHALLENGE", "true") %}
  {% do traefik.environment.add_env("TRAEFIK_CERTIFICATESRESOLVERS_TRUENASTLSRESOLVER_ACME_EMAIL", values.network.tls_challenge.email) %}
  {% do traefik.environment.add_env("TRAEFIK_CERTIFICATESRESOLVERS_TRUENASTLSRESOLVER_ACME_STORAGE", "%s/tls-acme.json"|format(values.consts.storage.acme)) %}
{% endif %}
{# DNS Challenge (Manage the big DNS providers and add capabilities for a custom DNS provider) #}
{% if values.network.dns_challenge %}
  {% do traefik.environment.add_env("TRAEFIK_CERTIFICATESRESOLVERS_TRUENASDNSRESOLVER_ACME_DNSCHALLENGE", "true") %}
  {% do traefik.environment.add_env("TRAEFIK_CERTIFICATESRESOLVERS_TRUENASDNSRESOLVER_ACME_DNSCHALLENGE_PROVIDER", values.network) %}
  {% do traefik.environment.add_env("TRAEFIK_CERTIFICATESRESOLVERS_TRUENASDNSRESOLVER_ACME_EMAIL", values.network.dns_challenge.email) %}
  {% do traefik.environment.add_env("TRAEFIK_CERTIFICATESRESOLVERS_TRUENASDNSRESOLVER_ACME_STORAGE", "%s/dns-acme.json"|format(values.consts.storage.acme)) %}
{% endif %}


{# Add Ports #}

{# Add conditional ports #}
{# Webui Port #}
{% if values.network.webui_enable %}
  {% do traefik.add_port(values.network.web_port) %}
{% endif %}
{# HTTP Proxy Port #}
{% if values.network.http_enable %}
  {% do traefik.add_port(values.network.http_port) %}
{% endif %}
{# HTTPS Proxy Port #}
{% if values.network.https_enable %}
  {% do traefik.add_port(values.network.https_port) %}
{% endif %}

{# Add additional use added ports #}
{% for port in values.network.additional_ports %}
  {% do traefik.add_port(port) %}
{% endfor %}


{# Add Volumes #}
{# Add folder for Certificates #}
{% do traefik.add_storage(values.consts.storage.certs, values.storage.certs) %}
{# Add folder for configuration yaml #}
{% do traefik.add_storage(values.consts.storage.config, values.storage.config) %}
{# Mount Docker Socket #}
{% do traefik.add_docker_socket(read_only=True) %}

{# Add User added Volumes #}
{% for store in values.storage.additional_storage %}
  {% do traefik.add_storage(store.mount_path, store) %}
{% endfor %}


{# Add user added environment variables #}
{% do traefik.environment.add_user_envs(values.additional_envs) %}


{# Add Labels XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX #}


{# Add conditional labels #}
{% if values.network.webui_secure %}
  {% do traefik.labels.add_label("traefik.enable", "true") %}
  {% do traefik.labels.add_label("traefik.http.routers.dashboard.rule", "Host(`%s`)"|format(values.network.webui_domain)) %}
  {% do traefik.labels.add_label("traefik.http.routers.dashboard.entrypoints", "websecure") %}
  {% do traefik.labels.add_label("traefik.http.routers.dashboard.service", "api@internal") %}
  {% do traefik.labels.add_label("traefik.http.routers.dashboard.tls", "true") %}
  {% do traefik.labels.add_label("traefik.docker.network", values.network.webui_docker_network) %}
{% endif %}


{# Set Traefik_Network_Connector as second container #}
{% set tnc = tpl.add_container(values.consts.traefik_network_connector_container_name, "tnc_image") %}

{# Set Environment variables #}
{% do tnc.environment.add_env("TRAEFIK_CONTAINERNAME", values.consts.traefik_container_name) %}
{% do tnc.environment.add_env("TRAEFIK_MONITOREDLABEL", "^traefik.enable$") %}

{# Mount Docker Socket to Traefik Network Connector #}
{% do tnc.add_docker_socket(read_only=False) %}




{# Enable webui button in truenas interface #}
{% do tpl.portals.add(values.network.web_port) %}

{{ tpl.render() | tojson }}