# Generate docker compose template
{% set tpl = ix_lib.base.render.Render(values) %}

# Create traefik container
# Get name from TrueNAS UI
# Get container image & tag from ix_values.yaml
{% set traefik = tpl.add_container(values.consts.traefik_container_name, "image") %}

# Add Commands to a variable as the set.command argument can only be used one time.
{% set commands = namespace(x=[
  "--api=%s" | format(values.consts.commands.api),
  "--api.dashboard=%s" | format(values.consts.commands.api.dashboard),
  "--api.insecure=%s" | format(values.consts.commands.api.insecure),
  "--providers.docker=%s" | format(values.consts.commands.providers.docker),
  "--providers.docker.exposedbydefault=%s" | format(values.consts.commands.docker.exposed),
]) %}
# Add conditional commands
# EntryPoints
#Check if http proxying is enabled and add entrypoint when nessecary
{% if values.network.http_enable %}
  {% do commands.x.append("--entryPoints.web.address=%s" | format(values.network.http_port.port_number)) %}
{% endif %}
#Check if https proxying is enabled and add entrypoint when nessecary
{% if values.network.https_enable %}
  {% do commands.x.append("--entryPoints.websecure.address" | format(values.network.https_port.port_number)) %}
{% endif %}
#Check if https redirection is enabled and add enable https redirection if it is
{% if values.network.http_enable and values.network.https_enable and values.network.https_redirect %}
  {% do commands.x.append("--entrypoints.web.http.redirections.entrypoint.to=websecure") %}
  {% do commands.x.append("--entrypoints.web.http.redirections.entrypoint.scheme=https") %}
  {% do commands.x.append("--entrypoints.web.http.redirections.entrypoint.permanent=true") %}
{% endif %}

# Setup Proxy commands
# HTTP Challenge
{% if values.proxy.challenge == "http_challenge" %}
  {% do commands.x.append("--certificatesresolvers.myresolver.acme.httpchallenge=true") %}
  {% do commands.x.append("--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web") %}
  {% do commands.x.append("--certificatesresolvers.myresolver.acme.email=%s" | format(values.proxy.email)) %}
  {% do commands.x.append("--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json") %}
{% endif %}
# TLS Challenge
{% if values.proxy.challenge == "tls_challenge" %}
  {% do commands.x.append("") %}
{% endif %}
# DNS Challenge
{% if values.proxy.challenge == "dns_challenge" %}
  {% do commands.x.append("") %}
{% endif %}


# Add all commands
{% do traefik.set_command(commands.x) %}


# Add Ports
# Webui Port
{% do traefik.add_port(values.network.web_port) %}

# Add conditional ports
# HTTP Proxy Port
{% if values.network.http_enable %}
  {% do traefik.add_port(values.network.http_port) %}
{% endif %}
# HTTPS Proxy Port
{% if values.network.https_enable %}
  {% do traefik.add_port(values.network.https_port) %}
{% endif %}


#ENVIRONMENT VARIABLES DO NOT YET SEEM ESSENTIAL, NEED TO WORK ON LATER
# Add Environment variables
#{% do traefik.environment.add_env("ENV_Variable", values.#VARIABLE#) %}

# Add conditional environment variables
#{% if values. %}
#  {% do traefik.environment.add_env("ENV_Variable", values.#VARIABLE#) %}
#{% endif %}

# Add user added environment variables
#{% do traefik.environment.add_user_envs(values.traefik.additional_envs) %}

# Add Volumes
# Add folder for letsencrypt certs
{% do traefik.add_storage(values.consts.storage.letsencrypt, values.storage.letsencrypt) %}
# Mount Docker Socket
{% if values.storage.enable_docker_socket %}
  {% do traefik.add_docker_socket(read_only=True) %}
{% endif %}


# Add User added Volumes
{% for store in values.storage.additional_storage %}
  {% do traefik.add_storage(store.mount_path, store) %}
{% endfor %}

# Do something IDK all the apps have it, I believe it makes the webui button in the truenas interface work and adds that default text
{% do tpl.portals.add(values.network.web_port) %}
{% do tpl.notes.set_body(values.consts.notes_body) %}

{{ tpl.render() | tojson }}