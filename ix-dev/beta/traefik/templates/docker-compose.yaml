{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.traefik_container_name, "image") %}

{% do c1.add_caps(["SETUID", "SETGID", "CHOWN", "FOWNER", "DAC_OVERRIDE"]) %}
{% do c1.healthcheck.set_custom_test("/bin/check-health") %}

{% do c1.add_extra_host("host.docker.internal", "host-gateway") %}

{% do c1.environment.add_env("DB_SQLITE_FILE", "%s/database.sqlite"|format(values.consts.data_path)) %}
{% do c1.environment.add_user_envs(values.traefik.additional_envs) %}

{% if not values.network.host_network %}
  {% do c1.add_port(values.network.web_port, {"container_port": 81}) %}
  {% do c1.add_port(values.network.https_port, {"container_port": 443}) %}
  {% do c1.add_port(values.network.http_port, {"container_port": 80}) %}

  {% for port in values.network.additional_ports %}
    {% do c1.add_port(port) %}
  {% endfor %}
{% endif %}

{% do c1.add_storage("/etc/letsencrypt", values.storage.certs) %}
{% do c1.add_storage(values.consts.data_path, values.storage.data) %}
{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
{% endfor %}

{% do tpl.portals.add(values.network.web_port) %}
{% do tpl.notes.set_body(values.consts.notes_body) %}

{{ tpl.render() | tojson }}




# Generate docker compose template
{% set tpl = ix_lib.base.render.Render(values) %}

# Create traefik container
# Get name from TrueNAS UI
# Get container image & tag from ix_values.yaml
{% set traefik = tpl.add_container(values.consts.traefik_container_name, "image") %}

# Add Commands:
{% do traefik.set_command %}

# Add Ports


# Add Environment variables
{% do traefik.environment.add_env("ENV_Variable", values.RANDOMVAR) %}

# Add conditional environment variables
{% if values.traefik.RANDOMVAR %}

# Add additional environment variables from gui
{% do traefik.environment.add_user_envs(values.traefik.additional_envs) %}

# Add Volumes
{% do traefik.add_storage(values.consts.consume_path, values.storage.consume) %}

# Add additional Storage
{% for store in values.storage.additional_storage %}
  {% do traefik.add_storage(store.mount_path, store) %}
{% endfor %}

# Do something IDK all thje apps have it
{% do tpl.portals.add(values.network.web_port) %}
{% do tpl.notes.set_body(values.consts.notes_body) %}

{{ tpl.render() | tojson }}